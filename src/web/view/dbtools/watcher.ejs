<!DOCTYPE html>
<html lang="en" class="h-100">
<head>
<%- include("../parts/header.ejs"); %>
<script src="/js/compiled/dbwatcher.js"></script>
<style>
    .collapsing {
        transition: none;
    }
</style>
</head>
<body class="bg-dark h-100">
    <main id="vue-dbwatcher" class="h-100 container-fluid">
        <vue-translatable
            :locale="'de'"
            :keys="{}"
            :to-translate="{}">
            <template v-slot:default="translation">
                <div class="d-flex">
                    <table class="table table-dark table-hover table-sm table-striped table-bordered">
                        <thead>
                            <tr><th scope="col" v-for="col in columns" class="text-center">{{ col }}</th></tr>
                            <tr>
                                <th scope="col" v-for="col in columns" class="text-center">
                                    <template v-if="!lazyFilter">
                                        <input class="form-control form-control-sm"
                                            type="text"
                                            v-if="['VARCHAR', 'NVARCHAR', 'VARCHAR2', 'NVARCHAR2', 'NUMBER', 'DATE'].includes(metaData[col]?.dbTypeName)"
                                            v-model="columnFilter[col]">
                                    </template>
                                    <template v-else>
                                        <input class="form-control form-control-sm"
                                            type="text"
                                            v-if="['VARCHAR', 'NVARCHAR', 'VARCHAR2', 'NVARCHAR2', 'NUMBER', 'DATE'].includes(metaData[col]?.dbTypeName)"
                                            v-model.lazy="columnFilter[col]">
                                    </template>
                                </th>
                            </tr>
                        </thead>
                        <template v-for="(group, index) in formattedGroups">
                            <tbody class="mb-3 collapse show" :id="`rowgroup-${index}`">
                                <tr v-for="row in group">
                                    <template v-for="col in columns">
                                        <td style="white-space: nowrap;"
                                            :class="row[col]?.classes"
                                            @click="onCellClick(row[col])"
                                            @dblclick="copyToClipboard(row[col]?.value)">
                                            <span v-if="row[col]?.type === 'JSON'"><i class="bi bi-file-earmark-code"></i></span>{{ row[col]?.text }}
                                        </td>
                                    </template>
                                </tr>
                            </tbody>
                            <tbody v-if="false">
                                <tr class="link-primary cursor-pointer w-100"
                                    style="font-size: 0.75em"
                                    data-bs-toggle="collapse"
                                    :data-bs-target="`#rowgroup-${index}`"
                                    aria-expanded="false">
                                    <td colspan="9999" class="border border-0 border-bottom border-1 border-primary">Toggle</td>
                                </tr>
                            </tbody>
                        </template>
                    </table>
                    <div class="floating-sidebar d-flex flex-column p-2 border-start border-2" :class="[this.running ? 'border-success' : 'border-danger']">
                        <div class="mb-1 d-flex justify-content-between">
                            <input class="btn btn-secondary btn-sm" type="button" value="Clear cache" @click="clearCache">
                        </div>
                        <div class="border border-2 rounded p-2 mb-3" :class="[this.running ? 'border-success' : 'border-danger']">
                            <input class="form-control form-control-sm mb-1" type="text" ref="user" v-model="user" placeholder="Username" aria-autocomplete="none">
                            <input class="form-control form-control-sm mb-1" type="text" ref="password" v-model="password" placeholder="Password" aria-autocomplete="none">
                            <input class="form-control form-control-sm mb-1" type="text" ref="host" v-model="host" placeholder="TNS Name">
                            <button class="form-control btn btn-sm" :class="[this.running ? 'btn-success' : 'btn-danger']" @click="toggleExecution()">{{ !this.running ? "Paused" : "Running" }}</button>
                        </div>
                        <div>
                            <label for="interval">Lazy input when rowcount > </label>
                            <input class="form-control mb-1" id="interval" type="number" v-model="lazyInputThreshold" :readonly="this.autoAdaptThreshold">
                            <div class="form-check">
                                <label class="form-check-label" for="auto-threshold">Auto adapt Threshold</label>
                                <input class="form-check-input" type="checkbox" id="auto-threshold" v-model="autoAdaptThreshold">
                            </div>
                            <label for="interval">Interval</label>
                            <input class="form-control mb-1" id="interval" type="number" v-model="interval" :readonly="this.running">
                            <textarea class="form-control mb-1" style="font-family: monospace" rows="10" v-model="query" :readonly="this.running"  @keydown.tab.prevent="taOnTab($event)" @keydown.enter.ctrl="toggleExecution()"></textarea>
                        </div>
                        <div class="border border-2 rounded p-2 mb-3">
                            <div class="form-check">
                                <label class="form-check-label" for="show-all">Show all</label>
                                <input class="form-check-input" type="checkbox" id="show-all" v-model="showAllRows">
                            </div>
                            <div class="form-check">
                                <label class="form-check-label" for="performance-mode">Performance mode</label>
                                <input class="form-check-input" type="checkbox" id="performance-mode" v-model="performanceMode">
                            </div>
                        </div>
                    </div>
                </div>
            </template>
        </vue-translatable>
        <vue-notification :notifications="notifications" @remove-notification="removeNotification($event)"></vue-notification>
    </main>
</body>
</html>